#[derive(Debug, Copy, Clone)]
pub enum Register {
    A,
    B,
    C,
    Z,
    SP,
}

type Immediate = u8;

pub enum Operand {
    Reg(Register),
    Imm(Immediate),
}

pub enum Instr {
    Add(Register, Register),
    Addi(Immediate, Register),
    Addc(Register, Register),
    Addci(Immediate, Register),
    Sub(Register, Register),
    Subi(Immediate, Register),
    Subb(Register, Register),
    Subbi(Immediate, Register),
    And(Register, Register),
    Ani(Immediate, Register),
    Or(Register, Register),
    Ori(Immediate, Register),
    Xor(Register, Register),
    Xri(Immediate, Register),
    Not(Register),
    Neg(Register),
    Inr(Register),
    Inr2(Register),
    Inr3(Register),
    Dcr(Register),
    Dcr2(Register),
    Dcr3(Register),
    Mov(Register, Register),
    Mvi(Immediate, Register),
    Ld(Register, Register),
    St(Register, Register),
    Lds(Immediate, Register),
    Sts(Register, Immediate),
    Stsi(Immediate, Immediate),
    Cmp(Register, Register),
    Cmpi(Operand, Operand),
    Label(String),
    Jmp(String),
    Je(String),
    Jne(String),
    Jg(String),
    Jge(String),
    Jl(String),
    Jle(String),
    Ja(String),
    Jae(String),
    Jb(String),
    Jbe(String),
    Call(String),
    Ret,
    Dic(Immediate),
    Did(Immediate),
    Dd(Register),
    Out(Register),
    Outi(Immediate),
    Hlt,
    Nop,
}
